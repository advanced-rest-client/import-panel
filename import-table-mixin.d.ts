/**
 * DO NOT EDIT
 *
 * This file was automatically generated by
 *   https://github.com/Polymer/gen-typescript-declarations
 *
 * To modify these typings, edit the source file(s):
 *   import-table-mixin.html
 */

/// <reference path="../polymer/types/lib/utils/mixin.d.ts" />

declare namespace ArcComponents {


  /**
   * A set of common functions for import panel
   */
  function ImportTableMixin<T extends new (...args: any[]) => {}>(base: T): T & ImportTableMixinConstructor;

  interface ImportTableMixinConstructor {
    new(...args: any[]): ImportTableMixin;
  }

  interface ImportTableMixin {

    /**
     * Indicates if the table is displaying list of items
     */
    opened: boolean|null|undefined;

    /**
     * The data to display.
     */
    data: any[]|null|undefined;

    /**
     * Computed value, true if data are set.
     */
    readonly hasData: boolean|null|undefined;

    /**
     * List of selected items on the list.
     */
    selectedItems: any[]|null|undefined;

    /**
     * If true, the user selected some elements on list. Check the
     * `this.selectedItems` property to check for the selected elements.
     */
    readonly hasSelection: boolean|null|undefined;

    /**
     * True to select all elements from the list
     */
    allSelected: boolean|null|undefined;
    connectedCallback(): void;
    disconnectedCallback(): void;

    /**
     * Computes value for `hasData`
     */
    _computeHasData(data: any[]|null): Boolean|null;

    /**
     * Toggles opened state
     */
    toggleOpened(): void;

    /**
     * Computes class for toggle icon
     */
    _computeToggleClass(opened: Boolean|null): String|null;

    /**
     * Computes the `hasSelection` property value
     */
    _computeHasSelection(length: Number|null): Boolean|null;

    /**
     * Computes table header class.
     */
    _computeTableClass(hasSelection: Boolean|null): String|null;
    _updateSelected(data: any): void;
    _selectAll(): void;

    /**
     * Toggles selection of of all itmes on the list.
     *
     * @param allSelected Current state of the `allSelected` property.
     */
    _toggleSelectAll(allSelected: Boolean|null): void;

    /**
     * Handler for the selection related events.
     */
    _onSelectItem(e: any): void;
    _selectedLengthChanged(size: any): void;
  }
}
